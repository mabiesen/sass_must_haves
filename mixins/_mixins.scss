//REFERENCES
// http://w3bits.com/sass-mixins/
// https://engageinteractive.co.uk/blog/top-10-scss-mixins

//------------------------------------------------------------------
// Automatically center an element
@mixin push--auto {
  margin: {
    left: auto;
    right: auto; }}

//-----------------------------------------------------------------
// Responsive ratio - good for background images?
@mixin responsive-ratio($x,$y, $pseudo: false) {
  $padding: unquote( ( $y / $x ) * 100 + '%' );
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
      padding-top: $padding;
        }}


//----------------------------------------------------------------
// cross-browser transitions
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}


//----------------------------------------------------------------
// cross browser animations
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}


//---------------------------------------------------------------
// cross browser border radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}


//--------------------------------------------------------------
// standard breakpoints
@mixin bp-large {
  @media only screen and (max-width: 60em) {
    @content;
  }
}

@mixin bp-medium {
  @media only screen and (max-width: 40em) {
    @content;
  }
}

@mixin bp-small {
  @media only screen and (max-width: 30em) {
    @content;
  }
}

//-------------------------------------------------------------------
// like em, but better
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

//--------------------------------------------------------------------
// standard input placeholder
@mixin input-placeholder {
      &.placeholder { @content; }
      &:-moz-placeholder { @content; }
      &::-moz-placeholder { @content; }
      &:-ms-input-placeholder { @content; }
      &::-webkit-input-placeholder { @content; }
    }

//--------------------------------------------------------------------
// Deal with all font concerns
@mixin font-source-sans($size: false,
 $colour: false,
  $weight: false,
    $lh: false) {
      font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
          @if $size {
             font-size: $size;
          }
          @if $colour {
             color: $colour;
          }
          @if $weight {
             font-weight: $weight;
          }
          @if $lh {
             line-height: $lh;
          }
      }

//------------------------------------------------------------------
// tooltip css triangles
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){    @include pseudo($pos: $position);    width: 0;    height: 0;    @if $round {        border-radius: 3px;    }    @if $direction == down {        border-left: $size solid transparent;        border-right: $size solid transparent;        border-top: $size solid $color;        margin-top: 0 - round( $size / 2.5 );    } @else if $direction == up {        border-left: $size solid transparent;        border-right: $size solid transparent;        border-bottom: $size solid $color;        margin-bottom: 0 - round( $size / 2.5 );    } @else if $direction == right {        border-top: $size solid transparent;        border-bottom: $size solid transparent;        border-left: $size solid $color;        margin-right: -$size;    } @else if  $direction == left {        border-top: $size solid transparent;        border-bottom: $size solid transparent;        border-right: $size solid $color;        margin-left: -$size; }}


//------------------------------------------------------------------
// element positioning
@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}

// helpers
@mixin absolute($args: '') {
  @include position(absolute, $args);
}

@mixin fixed($args: '') {
  @include position(fixed, $args);
}

@mixin relative($args: '') {
  @include position(relative, $args);
}

//-----------------------------------------------------------------------
// keyframes - Animation
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }

  @-moz-keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }
}

//--------------------------------------------------------------------------
// gradients crossbrowser
@mixin gradient($start-color, $end-color, $orientation) {
  background: $start-color;
  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  }
  @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  }
  @else {
    background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

//-----------------------------------------------------------------------
// center a block
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

//------------------------------------------------------------------------
// center vertically
@mixin center-vertically {
  position: absolute;
  top: 50%;
  left: 50%;
  @include prefix(transform, translate(-50%, -50%), 'webkit' 'ms');
}
